/*
 * Stardust API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2023-02-22T22:32:07Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package gg.stardust.coresdk.apis;

import gg.stardust.coresdk.models.Empty;
import gg.stardust.coresdk.models.Error;
import gg.stardust.coresdk.models.SDTokenBurnRequest;
import gg.stardust.coresdk.models.SDTokenGetResponses;
import gg.stardust.coresdk.models.SDTokenMintBulkRequest;
import gg.stardust.coresdk.models.SDTokenMintBulkResponses;
import gg.stardust.coresdk.models.SDTokenMutateRequest;
import gg.stardust.coresdk.models.SDTokenTransferRequest;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for TokenEndpointsApi
 */
@Ignore
public class TokenEndpointsApiTest {

    private final TokenEndpointsApi api = new TokenEndpointsApi();

    /**
     * Burn Token
     *
     * Burns token on-chain. Cannot be reversed.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void tokenBurnPostTest() throws Exception {
        SDTokenBurnRequest body = null;
        Empty response = api.tokenBurnPost(body);

        // TODO: test validations
    }
    /**
     * Get Token
     *
     * Some of the details of this token are based upon the Template that it was created from (using token/mint)
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void tokenGetGetTest() throws Exception {
        String tokenIds = null;
        SDTokenGetResponses response = api.tokenGetGet(tokenIds);

        // TODO: test validations
    }
    /**
     * Mint Tokens
     *
     * Mint tokens to a player.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void tokenMintBulkPostTest() throws Exception {
        SDTokenMintBulkRequest body = null;
        SDTokenMintBulkResponses response = api.tokenMintBulkPost(body);

        // TODO: test validations
    }
    /**
     * Mutate Token
     *
     * Mutates a Property of a Token
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void tokenMutatePutTest() throws Exception {
        SDTokenMutateRequest body = null;
        Empty response = api.tokenMutatePut(body);

        // TODO: test validations
    }
    /**
     * Remove Token Property
     *
     * Removes a Tokens Property from Your Game
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void tokenPropsRemoveDeleteTest() throws Exception {
        String tokenId = null;
        String props = null;
        Empty response = api.tokenPropsRemoveDelete(tokenId, props);

        // TODO: test validations
    }
    /**
     * Transfer Tokens
     *
     * Use this Endpoint to Facilitate Moving Tokens from one Player to Another
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void tokenTransferPostTest() throws Exception {
        SDTokenTransferRequest body = null;
        Empty response = api.tokenTransferPost(body);

        // TODO: test validations
    }
}
