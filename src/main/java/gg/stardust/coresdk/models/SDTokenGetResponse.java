/*
 * Stardust API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2023-02-22T22:32:07Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package gg.stardust.coresdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import gg.stardust.coresdk.models.SDTemplateGetTokensResponseTokenProps;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.io.Serializable;
/**
 * token data
 */
@Schema(description = "token data")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-09T11:52:00.026066-08:00[America/Los_Angeles]")
public class SDTokenGetResponse implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("gameId")
  private Integer gameId = null;

  @SerializedName("templateId")
  private Integer templateId = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("flags")
  private Integer flags = null;

  @SerializedName("props")
  private SDTemplateGetTokensResponseTokenProps props = null;

  @SerializedName("owner")
  private String owner = null;

  @SerializedName("publicMetadata")
  private Object publicMetadata = null;

  public SDTokenGetResponse gameId(Integer gameId) {
    this.gameId = gameId;
    return this;
  }

   /**
   * Game ID Number (unsigned 32 bit integer)
   * minimum: 0
   * maximum: 2147483647
   * @return gameId
  **/
  @Schema(required = true, description = "Game ID Number (unsigned 32 bit integer)")
  public Integer getGameId() {
    return gameId;
  }

  public void setGameId(Integer gameId) {
    this.gameId = gameId;
  }

  public SDTokenGetResponse templateId(Integer templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * Template ID Number (unsigned 32 bit integer)
   * minimum: 0
   * maximum: 2147483647
   * @return templateId
  **/
  @Schema(required = true, description = "Template ID Number (unsigned 32 bit integer)")
  public Integer getTemplateId() {
    return templateId;
  }

  public void setTemplateId(Integer templateId) {
    this.templateId = templateId;
  }

  public SDTokenGetResponse id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the token created
   * minimum: 0
   * maximum: 2147483647
   * @return id
  **/
  @Schema(required = true, description = "The ID of the token created")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public SDTokenGetResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the template
   * @return name
  **/
  @Schema(description = "The name of the template")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SDTokenGetResponse flags(Integer flags) {
    this.flags = flags;
    return this;
  }

   /**
   * Get flags
   * minimum: 0
   * maximum: 2147483647
   * @return flags
  **/
  @Schema(required = true, description = "")
  public Integer getFlags() {
    return flags;
  }

  public void setFlags(Integer flags) {
    this.flags = flags;
  }

  public SDTokenGetResponse props(SDTemplateGetTokensResponseTokenProps props) {
    this.props = props;
    return this;
  }

   /**
   * Get props
   * @return props
  **/
  @Schema(required = true, description = "")
  public SDTemplateGetTokensResponseTokenProps getProps() {
    return props;
  }

  public void setProps(SDTemplateGetTokensResponseTokenProps props) {
    this.props = props;
  }

  public SDTokenGetResponse owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Game Owner&#x27;s Public Key
   * @return owner
  **/
  @Schema(description = "Game Owner's Public Key")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public SDTokenGetResponse publicMetadata(Object publicMetadata) {
    this.publicMetadata = publicMetadata;
    return this;
  }

   /**
   * Returned to marketplaces as token metadata
   * @return publicMetadata
  **/
  @Schema(description = "Returned to marketplaces as token metadata")
  public Object getPublicMetadata() {
    return publicMetadata;
  }

  public void setPublicMetadata(Object publicMetadata) {
    this.publicMetadata = publicMetadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SDTokenGetResponse sdTokenGetResponse = (SDTokenGetResponse) o;
    return Objects.equals(this.gameId, sdTokenGetResponse.gameId) &&
        Objects.equals(this.templateId, sdTokenGetResponse.templateId) &&
        Objects.equals(this.id, sdTokenGetResponse.id) &&
        Objects.equals(this.name, sdTokenGetResponse.name) &&
        Objects.equals(this.flags, sdTokenGetResponse.flags) &&
        Objects.equals(this.props, sdTokenGetResponse.props) &&
        Objects.equals(this.owner, sdTokenGetResponse.owner) &&
        Objects.equals(this.publicMetadata, sdTokenGetResponse.publicMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gameId, templateId, id, name, flags, props, owner, publicMetadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SDTokenGetResponse {\n");
    
    sb.append("    gameId: ").append(toIndentedString(gameId)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    props: ").append(toIndentedString(props)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    publicMetadata: ").append(toIndentedString(publicMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
