/*
 * Stardust API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2023-02-22T22:32:07Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package gg.stardust.coresdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.io.Serializable;
/**
 * SDPlayerCreateJWTObject
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-09T11:52:00.026066-08:00[America/Los_Angeles]")
public class SDPlayerCreateJWTObject implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("type")
  private String type = null;

  @SerializedName("idToken")
  private String idToken = null;

  @SerializedName("accessToken")
  private String accessToken = null;

  public SDPlayerCreateJWTObject type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Your provider JWT name
   * @return type
  **/
  @Schema(required = true, description = "Your provider JWT name")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public SDPlayerCreateJWTObject idToken(String idToken) {
    this.idToken = idToken;
    return this;
  }

   /**
   * idToken of the user session
   * @return idToken
  **/
  @Schema(description = "idToken of the user session")
  public String getIdToken() {
    return idToken;
  }

  public void setIdToken(String idToken) {
    this.idToken = idToken;
  }

  public SDPlayerCreateJWTObject accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * Access token of the user session
   * @return accessToken
  **/
  @Schema(description = "Access token of the user session")
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SDPlayerCreateJWTObject sdPlayerCreateJWTObject = (SDPlayerCreateJWTObject) o;
    return Objects.equals(this.type, sdPlayerCreateJWTObject.type) &&
        Objects.equals(this.idToken, sdPlayerCreateJWTObject.idToken) &&
        Objects.equals(this.accessToken, sdPlayerCreateJWTObject.accessToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, idToken, accessToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SDPlayerCreateJWTObject {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    idToken: ").append(toIndentedString(idToken)).append("\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
